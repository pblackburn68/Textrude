{
  "Version": 1,
  "Description": "",
  "EngineInput": {
    "Definitions": [
      "",
      "",
      "",
      "",
      ""
    ],
    "IncludePaths": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "c:\\Development\\MYGITHUB\\Textrude\\Shared\\"
    ],
    "Models": [
      {
        "Format": 2,
        "Text": "name: FFS\r\ninterfaces: \r\n- name: IUser\r\n  properties:\r\n  - name: UserId\r\n    type: int\r\n    isIdentity: true\r\n    isKey: true\r\n- name: IAudit\r\n  properties:\r\n    - name: Updated{key}\r\n      type: IUser \r\n    - name: UpdatedDate\r\n      type: datetime\r\n    - name: Created{key} \r\n      type: IUser  \r\n    - name: CreatedDate\r\n      type: datetime\r\n- name: IReference\r\n  interfaces:\r\n  - IAudit\r\n  properties:\r\n    - name: Description\r\n      type: string\r\n      length: 255\r\n    - name: IsActive\r\n      type: bool\r\n      default: 1 \r\nentities:   \r\n- name: User        \r\n  interfaces:          \r\n  - IUser\r\n  properties:  \r\n  - name: Firstname \r\n    type: string \r\n    length: 512\r\n  - name: Lastname \r\n    type: string \r\n    length: 512\r\n- name: Address\r\n  properties:\r\n  - name: House \r\n    type: string  \r\n- name: AddressType\r\n  schema: Reference\r\n  interfaces: \r\n  - IReference\r\n  \r\n  \r\n\r\n\r\n",
        "Path": "C:\\Development\\MYGITHUB\\Textrude\\Projects\\DomainToSql\\DomainTest.yaml",
        "Name": "model"
      }
    ],
    "Template": "{{\r\ninclude \u0022domain.sbn\u0022\r\ninclude \u0022database.sbn\u0022\r\ninclude \u0022utilities.sbn\u0022\r\n\r\ndb.commentblock(\u0022Generate a SQL script based on a yaml File DomainTest.yaml\r\nPurpose: Quick example to demonstrate the power of scriban\u0022)\r\n}}\r\nUSE {{model.name}}\r\nSET QUOTED_IDENTIFIER, ARITHABORT, ANSI_NULLS, ANSI_WARNINGS ON\r\nGO \r\n{{for s in domain.getschemanames(model)}}\r\nIF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = \u0027{{s}}\u0027)\r\nBEGIN\r\n   EXEC(\u0027CREATE SCHEMA [{{s}}] AUTHORIZATION [dbo]\u0027);\r\nEND{{~end}}\r\nGO\r\n\r\n{{\r\nfor e in model.entities\r\n    schema = e.schema ? e.schema : \u0022dbo\u0022  \r\n}}\r\nIF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N\u0027[{{schema}}].[{{e.name}}]\u0027) AND type IN (N\u0027U\u0027))\r\nBEGIN\r\n    CREATE TABLE [{{schema}}].[{{e.name}}]\r\n    (\r\n    {{~ dbe = domain.getentity(e.name) \r\n    for p in dbe?.properties~}} \r\n        [{{ p.name }}] {{ p.sqlType }},      \r\n    {{~end~}} \r\n        {{db.primarykey(e.name, domain.getkeynames(dbe))}}\r\n    )         \r\nEND     \r\n{{end}}   \r\n{{capture cs}}\r\nnamespace {{model.name}} {\r\n    {{for e in model.entities}}\r\nclass {{e.name}} { \r\n} \r\n{{  end}}\r\n}\r\n{{end}}\r\n  \r\n  ",
    "TemplatePath": "C:\\Development\\MYGITHUB\\Textrude\\Projects\\DomainToSql\\DomainToSql.sbn"
  },
  "OutputControl": {
    "Outputs": [
      {
        "Format": "",
        "Name": "output",
        "Path": ""
      },
      {
        "Format": "",
        "Name": "cs",
        "Path": ""
      }
    ]
  }
}