{{
    
func __domain_getinterface(name)
# https://github.com/scriban/scriban/issues/386
    i = model.interfaces |
        array.filter @(do(p); ret p.name == name; end) |
        array.first |
        utils.objectclone
    ret i
end


func __domain_getentity(name)
# usage: domain.getentity (name)
# description: get a named entity from the domain model
# example: |-
# domain.getentity("User")
    i = model.entities |
        array.filter @(do(p); ret p.name == name; end) |
        array.first |
        utils.objectclone
    ret i
end


func __domain_getinterfaceproperties(name)
# usage: domain.getinterfaceproperties(name)
# description: get all interface properties for an entity
# example: |-
# domain.getentity("IAudit")
item = __domain_getinterface(name)
props = []
for p in item?.properties
    # Using null to determine if this is an object type
    if db.sqlType(p) == null
        props = array.add_range props getkeys(p.type, p.name)
    else
        props = array.add props p 
    end
end
ret props;
end


func __domain_getkeys(name, prefix = null)
    iface = __domain_getinterface(name)
    keys = []
    # "getKeys Name "+name+"\n"
    if iface
        # "Interface Properties :"+iface. Properties+"\n"
        farr = iface.properties |
               array.filter @(do(p); ret p.iskey == true; end)
        # "Filtered Array       :""+farr+"\n"
        keys = farr | utils.objectclone
        # "Cloned Array         :"+keys+"\n"
    else
        entity = __domain_getentity(name)
        if entity
    
            keys = array.add_range keys entity.properties |
                   array.filter @(do(p); ret p.iskey == true; end) |
                   utils.objectclone
        end
    end
    for k in keys
        if prefix
            k.name = string.replace prefix "(key)" k.name
        end
        k.isIdentity = false;
    end
    ret keys
end

}}